package chapter05;

/**
 * Chapter05. 배열 array
 */
public class Chapter05 {

    /**
     * 1. 배열(array)
     * 1.1 배열(array)이란?
     * 같은 타입의 여러 변수를 하나의 묶음으로 다루는 것을 '배열(array)'이라고 한다.
     * "배열은 같은 타입의 여러 변수를 하나의 묶음으로 다루는 것"
     * 중요한 것은 '같은 타입'이어야 한다는 것이며, 서로 다른 타입의 변수들로 구성된 배열은 만들 수 없다.
     * int[] score = new int[5]; // 5개의 int 값을 저장할 수 있는 배열을 생성한다.
     * 값을 저장할 수 있는 공간은 score[0]부터 score[4]까지 모두 5개이며, 변수 score는 배열을 다루는데 필요한 참조변수일 뿐 값을 저장하
     * 기 위한 공간은 아니다. 변수와 달리 배열은 각 저장공간이 연속적으로 배치되어 있다.
     */

    /**
     * 1.2 배열의 선언과 생성
     * 배열을 선언하는 방법은 간단하다. 원하는 타입의 변수를 선언하고 변수 또는 타입에 배열임을 의미하는 대괄호[]를 붙이면 된다. 대괄호[]는
     * 타입 뒤에 붙여도 되고 변수이름 뒤에 붙여도 된다.
     * 선언방법 | 선언 예
     * 타입[] 변수이름; | int[] score, String[] name;
     * 타입 변수이름[]; | int score[], String name[];
     * 배열의 생성
     * 배열을 선언한 다음에는 배열을 생성해야한다. 배열을 선언하는 것은 단지 생성된 배열을 다루기 위한 참조변수를 위한 공간이 만들어질 뿐이고,
     * 배열을 생성해야만 비로소 값을 저장할 수 있는 공간이 만들어지는 것이다. 배열을 생성하기 위해서느 연산자 'new'와 함께 배열의 타입과 길이
     * 를 지정해 주어야 한다.
     * 타입[] 변수이름; // 배열을 선언(배열을 다루기 위한 참조변수 선언)
     * 변수이름 = new 타입[길이]; // 배열을 생성(실제 저장공간을 생성)
     */

    /**
     * 1.3 배열의 길이와 인덱스
     * 생성된 배열의 각 저장공간을 '배열의 요소(element)'라고 하며, '배열이름[인덱스]'의 형식으로 배열의 요소에 접근한다. <b>인덱스(index)
     * 는 배열의 요소마다 붙여진 일련번호로</b> 각 요소를 구별하는데 사용된다. 다만 인덱스는 1이 아닌 0부터 시작한다.
     * <b>"인덱스(index)의 범위는 0부터 '배열길이-1'까지."</b>
     * 배열에 값을 저장하고 읽어오는 방법은 변수와 같다. 변수이름 대신 '배열이름[인덱스]'를 사용한다는 점만 다르다.
     * 배열의 또다른 장점은 index로 상수 대신 변수나 수식도 사용할 수 있다는 것이다.
     * 배열을 다룰 때 한가지 주의할 점은 index의 범위를 벗어난 값을 index로 사용하지 않아야 한다는 것이다.
     * 컴파일러는 이러한 실수를 걸러주지 못한다. 변수의 값은 실행 시에 대입되므로 컴파일러는 이 값의 범위를 확인할 수 없다.
     * 유효하지 않은 값을 index로 사용하면, 무사히 컴파일 마쳤더라도 실행 시에 에러(ArrayIndexOutOfBoundsException)가 발생한다.
     */
    static class ArrayEx1 {
        public static void main(String[] args) {
            int[] score = new int[5];
            int k = 1;

            score[0] = 50;
            score[1] = 60;
            score[k+1] = 70; // score[2] = 70
            score[3] = 80;
            score[4] = 90;

            int tmp = score[k+2] + score[4]; // int tmp = score[3] + score[4]

            for(int i = 0; i < score.length; i++) {
                System.out.printf("score[%d]:%d%n", i, score[i]);
            }

            System.out.printf("tmp:%d%n", tmp);
            System.out.printf("score[%d]:%d%n", 7, score[7]); // index의 범위를 벗어난 값

        }
    }

}
