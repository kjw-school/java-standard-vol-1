package chapter03;

/**
 * <h1>Chapter03. 연산자 operator</h1>
 */
public class Chapter03 {

	/**
	 * <p>
	 *     <h5>1. 연산자(operator)</h5><br>
	 *     연산자는 '연산을 수행하는 기호'를 말한다.
	 * </p>
	 */
	class Memo01{}

	/**
	 * <p>
	 *		<h5>1.1 연산자와 피연산자</h5><br>
	 * 	 	연산자가 연산을 수행하려면 반드시 연산의 대상이 있어야하는데, 이것을 '피연산자(operand)'라고 한다.<br>
	 * 	 	피연산자로 상수, 변수 또는 식(式) 등을 사용할 수 있다.<br>
	 * 	 	<b>연산자(operator) - 연산을 수행하는 기호(+, -, *, / 등)</b><br>
	 * 	 	<b>피연산자(operand) - 연산자의 작업 대상(변수, 상수, 리터럴, 수식)</b><br>
	 * 	 	<b>연산자는 피연산자로 연산을 수행하고 나면 항상 결과값을 반환한다.</b>
	 * </p>
	 */
	class Memo02{}

	/**
	 * <p>
	 * 		<h5>식(式)과 대입연산자</h5><br>
	 * 		연산자와 피연산자를 조합하여 계산하고자하는 바를 표현한 것을 '식(式, expression)'이라고 한다.<br>
	 * 		식을 계산하여 결과를 얻는 것을 '식을 평가(evaluation)한다'고 한다.<br>
	 * 		하나의 식을 평가(계산)하면, 단 하나의 결과를 얻는다.
	 * </p>
	 */
	class Memo03{}

	/**
	 * <p>
	 *     <h5>1.3 연산자의 종류</h5><br>
	 *
	 * </p>
	 */
	class Memo04{}

}
