package chapter02;

/**
 * 변수 variable
 */
public class Chapter02 {

    /**
     * 1. 변수(variable)
     * 1.1 변수(variable)란?
     * 프로그래밍언어에서의 변수(variable)란, 값을 저장할 수 있는 메모리상의 공간을 의미한다.
     * "변수란, 단 하나의 값을 저장할 수 있는 메모리 공간."
     * 하나의 변수에 단 하나의 값만 저장할 수 있으므로, 새로운 값을 저장하면 기존의 값은 사
     * 라진다.
     */

    /**
     * 1.2 변수의 선언과 초기화
     * 변수를 사용하려면 먼저 변수를 선언해야한다.
     * int age; // age 라는 이름의 변수를 선언
     * ↓   ↘
     * 변수타입 변수이름
     * '변수타입'은 변수에 저장될 값이 어떤 '타입(type)'인지를 저장하는 것이다.
     * 자바는 정수형, 실수형, 문자형 등 다양한 타입을 제공한다.
     * '변수이름'은 말 그대로 변수에 붙인 이름이다. 변수는'값을 저장할 수 있는 메모리 공간'
     * 이므로 변수의 이름은 메모리 공간에 이름을 붙여주는 것이다.
     * 같은 이름의 변수가 여러 개 존재해서는 안된다.
     * 변수를 선언하면, 메모리의 빈 공간에 '변수타입'에 알맞은 크기의 저장공간이 확보되고,
     * 앞으로 이 저장공간은 '변수이름'을 통해 사용할 수 있게 된다.
     * 변수의 초기화
     * 변수를 선언한 이후부터는 변수를 사용할 수 있으나, 그 전에 반드시 변수를 '초기화
     * (initialization)'해야 한다. 메모리는 여러 프로그램이 공유하는 자원이므로 전에 다른 프
     * 로그램에 의해 저장된 '알 수 없는 값(쓰레기값, garbage value)'이 남아 있을 수 있기 때문
     * 이다.
     * 변수에 값을 저장할 때는 대입 연산자'='를 이용한다.
     * 자바에서는 오른쪽의 값을 왼쪽(변수)에 저장하라는 뜻이다. 대입연산자
     * 의 왼쪽에는 반드시 변수가 와야 한다.
     * 변수는 한 줄에 하나씩 선언하는 것이 보
     * 통이지만, 타입이 같은 경우 콤마','를 구분자로 여러 변수를 한 줄에 선언하기도 한다.
     * 변수는 사용되기 전
     * 에 적할한 값으로 초기화하는 것이 좋다.
     * "변수의 초기화란, 변수를 사용하기 전에 처음으로 값을 저장하는 것"
     * 변수에 값을 저장하는 '대입연산(=)'은 우변의 모든 계산이 끝난 후에 제
     * 일 마지막에 수행된다.
     * 덧셈연산자 '+'는 두 값을 더하기도 하지만, 문자열과 숫자를 하나로 결합하기도 한다.
     * 문자열은 큰따옴표 ""로 묶은 연속된 문자를 말한다.
     */

    /**
     * 1.3 변수의 명명규칙
     * '변수의 이름'처럼 프로그래밍에서 사용하는 모든 이름을 '식별자(identifier)'라고 하며,
     * 식별자는 같은 영역내에서 서로 구분(식별)될 수 있어야한다.
     * 1. 대소문자가 구분되며 길이에 제한이 없다.
     * - True와 true는 서로 다른 것으로 간주된다.
     * 2. 예약어를 사용해서는 안 된다.
     * - true는 예약어라서 사용할 수 없지만, True는 가능하다.
     * 3. 숫자로 시작해서는 안 된다.
     * - top10은 허용하지만, 7up은 허용되지 않는다.
     * 4. 특수문자는 '_'와 '$'만을 허용한다.
     * - $harp은 허용되지만, S#arp은 허용되지 않는다.
     * 예약어는 키워드(keyword) 또는 '리져브드 워드(reserved word)'라고 하는데, 프로그래
     * 밍언어의 구문에 사용되는 단어를 뜻한다. 예약어는 클래스나 변수, 메서드의 이
     * 름(identifier)으로 사용할 수 없다.
     * 1. 클래스 이름의 첫 글자는 항상 대문자로 한다.
     * - 변수와 메서드의 이름의 첫 글자는 항상 소문자로 한다.
     * 2. 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 한다.
     * - lastIndexOf, StringBuffer
     * 3. 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우'_'로 구분한다.
     * - PI, MAX_NUMBER
     */

}










