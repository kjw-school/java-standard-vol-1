package chapter07;

/**
 * <h1>5. 다형성(polymorphism)</h1>
 */
public class Chapter7_5 {

	/**
	 * <h5>5.1 다형성이란?</h5><br>
	 * 객체지향개념에서 다형성이란 '여러 가지 형태를 가질 수 있는 능력'을 의미하며, 자바에서는 한 타입의 참조변수로 여러 타입의 객체를 참조할 수 있도록 함으로써 다형성을 프로그램적으로 구현하였다.<br>
	 * 조상 클래스 타입의 참조변수로 자손클래스의 인스턴스를 참조할 수 있도록 하였다는 것이다.<br>
	 * 인스턴스의 타입과 참조변수의 타입이 일치하는 것이 보통이지만, 서로 상속관계에 있을 경우, 조상 클래스 타입의 참조변수로 자손 클래스의 인스턴스를 참조하도록 하는 것도 가능하다.<br>
	 * 참조변수의 타입에 따라 사용할 수 있는 멤버의 개수가 달라진다.<br>
	 * 자손타입의 참조변수로 조상타입의 인스턴스를 참조하는 것은 존재하지 안흔 멤버를 사용하고자 할 가능성이 있으므로 허용하지 않는다. 참조변수가 사용할 수 있는 멤버의 개수는 인스턴스의 멤버 개수보다 같거나 적어야 한다.<br>
	 * <small>※ 모든 참조변수는 null 또는 4 byte의 주소값이 저장되며, 참조변수의 타입은 참조할 수 있는 객체의 종류와 사용할 수 있는 멤버의 수를 결정한다.</small><br>
	 * <pre><code>
	 *     조상타입의 참조변수로 자손타입의 인스턴스를 참조할 수 있다.
	 *     반대로 자손타입의 참조변수로 조상타입의 인스턴스를 참조할 수는 없다.
	 * </code></pre>
	 */
	class Memo1 {

	}

	/**
	 * <h5>5.2 참조변수의 형변환</h5><br>
	 * 기본형 변수와 같이 참조변수도 형변환이 가능하다. 단, 서로 상속관계에 있는 클래스사이에서만 가능하기 때문에 자손타입의 참조변수를 조상타입의 참조변수로, 조상타입의 참조변수를 자손타입의 참조변수로의 형변환만 가능하다.<br>
	 * <small>※ 바로 윗 조상이나 자손이 아닌, 조상의 조상으로도 형변환이 가능하다. 따라서 모든 참조변수는 모든 클래스의 조상인 Object클래스 타입으로 형변환이 가능하다.</small><br>
	 * 참조형 변수의 형변환에서는 자손타입의 참조변수를 조상타입으로 형변환하는 경우에는 형변환을 생략할 수 있다.<br>
	 * <pre><code>
	 *     자손타입 -> 조상타입(Up-casting): 형변환 생략가능
	 *     자손타입 <- 조상타입(down-casting): 형변환 생략불가
	 * </code></pre>
	 *
	 */
	class Memo2 {

	}

}
